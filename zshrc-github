# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/Josh/.oh-my-zsh"



# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  dotenv
  osx
  rbenv
  pyenv
  ssh-agent
)
### IMPORTANT: put these settings before the line that sources oh-my-zsh
zstyle :omz:plugins:ssh-agent agent-forwarding yes
zstyle ':omz:plugins:ssh-agent' identities id_rsa josh_key_pair.pem everfi20210621
#### END IMPORTANT

source $ZSH/oh-my-zsh.sh

# User configuration
export EDITOR='vim'
export PATH=/usr/local/bin:$HOME/bin:$PATH
export AWS_REGION=us-east-1
export PATH="/Users/Josh/miniconda3/bin:$PATH"
export GITHUB_TOKEN= #redacted
export JIRA_TOKEN= #redacted

function p { for f in $(ls -d ~/projects/$1*); do cd $f; break; done; }
export PATH="/usr/local/lib/node_modules:$PATH"
export AWS_DEFAULT_REGION=us-east-1
export PYENV_ROOT=$(pyenv root)
export PIPENV_PYTHON=$PYENV_ROOT/shims/python
alias git_add_modified="git status | grep 'modified' | ruby -e \"puts STDIN.read.gsub(/.*:/,'').gsub(/\n/,'')\" | xargs git add"

eval "$(pyenv init -)"



########## TAB COMPLETION FOR VARIOUS NODE PACKAGES ##########
## tabtab source for serverless package
## uninstall by removing these lines or running `tabtab uninstall serverless`
#[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
## tabtab source for sls package
## uninstall by removing these lines or running `tabtab uninstall sls`
#[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh
#eval "$(rbenv init -)"
#stty -ixon
#
## tabtab source for slss package
## uninstall by removing these lines or running `tabtab uninstall slss`
#[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh
######## END TAB COMPLETION STUFF ##########
#

HISTFILE=~/.zsh_history
HISTSIZE=999999999
SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt HIST_EXPIRE_DUPS_FIRST

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
bindkey '^T' transpose-chars
alias ll="ls -larth"




###########NVM STUFF ############
#export NVM_DIR=/Users/jstanfield/.nvm
#
## Shim NVM that will load the real NVM.
## Saves 800ms of script start-up time.
#function nvm() {
#  if [[ ! -e "${NVM_DIR}/nvm.sh" ]]; then
#    echo "NVM not found in NVM_DIR=${NVM_DIR}" >&2
#    return 1
#  fi
#
#  unfunction nvm
#  source "${NVM_DIR}/nvm.sh"
#  nvm "$@"
#}

########## END NVM STUFF ##########



eval "$(pyenv init -)"

if [ -f $(brew --prefix)/etc/brew-wrap ];then
  source $(brew --prefix)/etc/brew-wrap
fi

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh
eval "$(rbenv init -)"
stty -ixon

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.zsh

HISTFILE=~/.zsh_history
HISTSIZE=999999999
SAVEHIST=$HISTSIZE
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt HIST_EXPIRE_DUPS_FIRST

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
bindkey '^T' transpose-chars
. `which env_parallel.zsh`

# added by Snowflake SnowSQL installer v1.2
export PATH=/Applications/SnowSQL.app/Contents/MacOS:$PATH
export PATH="/usr/local/sbin:$PATH"
export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"

export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"

# Shim NVM that will load the real NVM.
# Saves 800ms of script start-up time.
function nvm() {
  if [[ ! -e "${NVM_DIR}/nvm.sh" ]]; then
    echo "NVM not found in NVM_DIR=${NVM_DIR}" >&2
    return 1
  fi

  unfunction nvm
  source "${NVM_DIR}/nvm.sh"
  nvm "$@"
}

alias ll="ls -larth"

export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

# Added by serverless binary installer
export PATH="$HOME/.serverless/bin:$PATH"
